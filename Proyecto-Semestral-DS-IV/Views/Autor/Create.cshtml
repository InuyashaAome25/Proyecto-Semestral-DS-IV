@model Proyecto_Semestral_DS_IV.Models.Modelos.Autor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Gestionar Autor</h3>
            </div>

            <div class="title_right">
                <div class="col-md-5 col-sm-5 form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Buscar Autor...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="submit">Buscar</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12">
                <div class="x_panel">
                    <div class="x_content">

                        @if (ViewBag.Message != null)
                        {
                            <div class="alert alert-info">@ViewBag.Message</div>
                        }

                        <!-- Formulario para Crear Autor -->
                        <form action="@Url.Action("Create", "Autor")" method="post" class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <span class="section">Información Autor</span>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">Nombre Autor:<span class="required">*</span></label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.EditorFor(model => model.NombreAutor, new { htmlAttributes = new { @class = "form-control", id = "nombreAutor" } })
                                    @Html.ValidationMessageFor(model => model.NombreAutor, "", new { @class = "text-danger" })
                                    <span class="text-danger" id="nameAutorError" style="display:none;">Este campo es obligatorio y debe tener al menos 6 caracteres.</span>
                                </div>
                            </div>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">Apellido Autor:<span class="required">*</span></label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.EditorFor(model => model.ApellidoAutor, new { htmlAttributes = new { @class = "form-control", id = "apellidoAutor" } })
                                    @Html.ValidationMessageFor(model => model.ApellidoAutor, "", new { @class = "text-danger" })
                                    <span class="text-danger" id="apellidoAutorError" style="display:none;">Este campo es obligatorio y debe tener al menos 6 caracteres.</span>
                                </div>
                            </div>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">Biografía:</label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.TextAreaFor(model => model.Biografia, new { @class = "form-control", id = "biografia", rows = 3 })
                                    @Html.ValidationMessageFor(model => model.Biografia, "", new { @class = "text-danger" })
                                    <span class="text-danger" id="biografiaError" style="display:none;">La biografía del autor no puede tener más de 1000 caracteres.</span>
                                </div>
                            </div>
                            <div class="ln_solid">
                                <div class="form-group">
                                    <div class="col-md-6 offset-md-3">
                                        <input type="submit" value="Crear" class="btn btn-primary" id="crearBtn" />
                                        <input type="reset" value="Restablecer" class="btn btn-success" />
                                        <button type="button" class="btn btn-secondary" id="limpiarBtnCrear">Limpiar</button>
                                    </div>
                                </div>
                            </div>
                        </form>

                        <!-- Formulario para Eliminar Autor -->
                        <form action="@Url.Action("Delete", "Autor")" method="post" class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <span class="section">Eliminar Autor</span>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">ID Autor:</label>
                                <div class="col-md-6 col-sm-6">
                                    <input type="text" class="form-control" name="Id" placeholder="ID del Autor" id="idAutor" required />
                                    <span class="text-danger" id="idAutorError" style="display:none;">Este campo es obligatorio.</span>
                                </div>
                            </div>
                            <div class="ln_solid">
                                <div class="form-group">
                                    <div class="col-md-6 offset-md-3">
                                        <input type="submit" value="Eliminar" class="btn btn-danger" id="eliminarBtn" />
                                        <input type="reset" value="Restablecer" class="btn btn-success" />
                                        <button type="button" class="btn btn-secondary" id="limpiarBtnEliminar">Limpiar</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!-- Formulario para Actualizar Autor -->
                        <form action="@Url.Action("Update", "Autor")" method="post" class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <span class="section">Actualizar Autor</span>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">ID Autor:</label>
                                <div class="col-md-6 col-sm-6">
                                    <input type="text" class="form-control" name="idAutor" placeholder="ID del Autor" id="idAutorActualizar" />
                                    <span class="text-danger" id="idAutorActualizarError" style="display:none;">Este campo es obligatorio.</span>
                                </div>
                            </div>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">Nuevo Nombre:</label>
                                <div class="col-md-6 col-sm-6">
                                    <input type="text" class="form-control" name="nuevoNombre" placeholder="Nuevo Nombre del Autor" id="nuevoNombreAutor" />
                                    <span class="text-danger" id="nuevoNombreAutorError" style="display:none;">Este campo es obligatorio y debe tener al menos 6 caracteres.</span>
                                </div>
                            </div>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">Nuevo Apellido:</label>
                                <div class="col-md-6 col-sm-6">
                                    <input type="text" class="form-control" name="nuevoApellido" placeholder="Nuevo Apellido del Autor" id="nuevoApellidoAutor" />
                                    <span class="text-danger" id="nuevoApellidoAutorError" style="display:none;">Este campo es obligatorio y debe tener al menos 6 caracteres.</span>
                                </div>
                            </div>
                            <div class="field item form-group">
                                <label class="col-form-label col-md-3 col-sm-3 label-align">Nueva Descripción:</label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.TextArea("nuevaDescripcion", null, new { @class = "form-control", @id = "nuevaDescripcionAutor", rows = 5 })
                                    <span class="text-danger" id="nuevaDescripcionAutorError" style="display:none;">Este campo es obligatorio y debe tener al menos 6 caracteres.</span>
                                </div>
                            </div>
                            <div class="ln_solid">
                                <div class="form-group">
                                    <div class="col-md-6 offset-md-3">
                                        <input type="submit" value="Actualizar" class="btn btn-primary" id="actualizarBtn" />
                                        <input type="reset" value="Restablecer" class="btn btn-success" />
                                        <button type="button" class="btn btn-secondary" id="limpiarBtnActualizar">Limpiar</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section scripts{
        <script src="~/Vendors/validator/multifield.js"></script>
        <script src="~/Vendors/validator/validator.js"></script>
    }
</div>

<script>
    document.getElementById("crearBtn").addEventListener("click", function (e) {
        var nameAutorField = document.getElementById("nombreAutor");
        var apellidoAutorField = document.getElementById("apellidoAutor");
        var biografiaField = document.getElementById("biografia");
        var nameErrorMsg = document.getElementById("nameAutorError");
        var apellidoErrorMsg = document.getElementById("apellidoAutorError");
        var biografiaErrorMsg = document.getElementById("biografiaError");
        var valid = true;

        if (nameAutorField.value.trim() === '' || nameAutorField.value.length < 6) {
            nameErrorMsg.style.display = 'block';
            valid = false;
        } else {
            nameErrorMsg.style.display = 'none';
        }

        if (apellidoAutorField.value.trim() === '' || apellidoAutorField.value.length < 6) {
            apellidoErrorMsg.style.display = 'block';
            valid = false;
        } else {
            apellidoErrorMsg.style.display = 'none';
        }

        if (biografiaField.value.length > 1000) {
            biografiaErrorMsg.style.display = 'block';
            valid = false;
        } else {
            biografiaErrorMsg.style.display = 'none';
        }

        if (!valid) {
            e.preventDefault();
        }
    });

    document.getElementById("eliminarBtn").addEventListener("click", function (e) {
        var idAutorField = document.getElementById("idAutor");
        var errorMsg = document.getElementById("idAutorError");
        var valid = true;

        if (idAutorField.value.trim() === '') {
            errorMsg.style.display = 'block';
            valid = false;
        } else {
            errorMsg.style.display = 'none';
        }

        if (!valid) {
            e.preventDefault();
        }
    });

    document.getElementById("actualizarBtn").addEventListener("click", function (e) {
        var idAutorField = document.getElementById("idAutorActualizar");
        var nombreAutorField = document.getElementById("nuevoNombreAutor");
        var apellidoAutorField = document.getElementById("nuevoApellidoAutor");
        var descripcionAutorField = document.getElementById("nuevaDescripcionAutor");
        var idErrorMsg = document.getElementById("idAutorActualizarError");
        var nombreErrorMsg = document.getElementById("nuevoNombreAutorError");
        var apellidoErrorMsg = document.getElementById("nuevoApellidoAutorError");
        var descripcionErrorMsg = document.getElementById("nuevaDescripcionAutorError");
        var valid = true;

        if (idAutorField.value.trim() === '') {
            idErrorMsg.style.display = 'block';
            valid = false;
        } else {
            idErrorMsg.style.display = 'none';
        }

        if (nombreAutorField.value.trim() === '' || nombreAutorField.value.length < 6) {
            nombreErrorMsg.style.display = 'block';
            valid = false;
        } else {
            nombreErrorMsg.style.display = 'none';
        }

        if (apellidoAutorField.value.trim() === '' || apellidoAutorField.value.length < 6) {
            apellidoErrorMsg.style.display = 'block';
            valid = false;
        } else {
            apellidoErrorMsg.style.display = 'none';
        }

        if (descripcionAutorField.value.trim() === '' || descripcionAutorField.value.length < 6) {
            descripcionErrorMsg.style.display = 'block';
            valid = false;
        } else {
            descripcionErrorMsg.style.display = 'none';
        }

        if (!valid) {
            e.preventDefault();
        }
    });

    document.forms[0].addEventListener("reset", function (e) {
        var nameErrorMsg = document.getElementById("nameAutorError");
        var apellidoErrorMsg = document.getElementById("apellidoAutorError");
        var biografiaErrorMsg = document.getElementById("biografiaError");
        if (nameErrorMsg) {
            nameErrorMsg.style.display = 'none';
        }
        if (apellidoErrorMsg) {
            apellidoErrorMsg.style.display = 'none';
        }
        if (biografiaErrorMsg) {
            biografiaErrorMsg.style.display = 'none';
        }
    });

    document.forms[1].addEventListener("reset", function (e) {
        var errorMsg = document.getElementById("idAutorError");
        if (errorMsg) {
            errorMsg.style.display = 'none';
        }
    });

    document.forms[2].addEventListener("reset", function (e) {
        var idErrorMsg = document.getElementById("idAutorActualizarError");
        var nombreErrorMsg = document.getElementById("nuevoNombreAutorError");
        var apellidoErrorMsg = document.getElementById("nuevoApellidoAutorError");
        var descripcionErrorMsg = document.getElementById("nuevaDescripcionAutorError");
        if (idErrorMsg) {
            idErrorMsg.style.display = 'none';
        }
        if (nombreErrorMsg) {
            nombreErrorMsg.style.display = 'none';
        }
        if (apellidoErrorMsg) {
            apellidoErrorMsg.style.display = 'none';
        }
        if (descripcionErrorMsg) {
            descripcionErrorMsg.style.display = 'none';
        }
    });

    document.getElementById("limpiarBtnCrear").addEventListener("click", function (e) {
        // Limpia todos los campos del formulario de Crear
        var inputs = document.querySelectorAll('form[action*="Create"] input[type="text"], textarea');
        inputs.forEach(function (input) {
            input.value = '';
        });
    });

    document.getElementById("limpiarBtnEliminar").addEventListener("click", function (e) {
        // Limpia todos los campos del formulario de Eliminar
        var inputs = document.querySelectorAll('form[action*="Delete"] input[type="text"]');
        inputs.forEach(function (input) {
            input.value = '';
        });
    });

    document.getElementById("limpiarBtnActualizar").addEventListener("click", function (e) {
        // Limpia todos los campos del formulario de Actualizar
        var inputs = document.querySelectorAll('form[action*="Update"] input[type="text"], textarea');
        inputs.forEach(function (input) {
            input.value = '';
        });
    });
</script>